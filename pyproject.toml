[tool.poetry]
name = "ai-trading"
version = "0.2.0"
description = "AI Stock Automated Trading System - 智能股票自動交易系統"
authors = ["Cookie <noiroao@gmail.com>"]
maintainers = ["Cookie <noiroao@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/0Smallcat0/ai_trading"
repository = "https://github.com/0Smallcat0/ai_trading"
documentation = "https://github.com/0Smallcat0/ai_trading/tree/main/docs"
keywords = ["trading", "ai", "stock", "finance", "automation", "quantitative"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
packages = [{include = "src"}]
include = [
    "README.md",
    "docs/**/*",
    "config/**/*",
]
exclude = [
    "tests/**/*",
    "scripts/**/*",
    "logs/**/*",
    "*.log",
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0.0"
pandas = "2.2.3"
numpy = "1.26.4"
scipy = "1.15.2"
joblib = "1.5.0"
requests = "2.32.3"
beautifulsoup4 = "4.13.4"
feedparser = "6.0.11"
pandas-datareader = "^0.10.0"
matplotlib = "3.10.1"
seaborn = "^0.13.0"
plotly = "^5.0.0"
ipywidgets = "8.1.7"
jupyterlab = "4.4.2"
ipykernel = "^6.0.0"
tqdm = "4.67.1"
python-json-logger = "^2.0.0"
apscheduler = "3.11.0"
python-dotenv = "^1.0.0"
pydantic = "2.7.4"
sqlalchemy = "2.0.6"
scikit-learn = "1.3.2"
statsmodels = "^0.14.0"
riskfolio-lib = "7.0.1"
cvxpy = "1.6.5"
ecos = "2.0.14"
osqp = "1.0.3"
gymnasium = "1.1.1"
finmind = "^1.8.0"
yfinance = "^0.2.61"
alpha-vantage = "^3.0.0"
# ta-lib = "^0.4.28"  # Temporarily disabled due to compilation issues on Windows
pandas-ta = "^0.3.14b"  # Alternative technical analysis library
# snownlp = "^0.12.3"  # Temporarily disabled due to download issues
psutil = "^7.0.0"
pyarrow = ">=7.0.0"
backtrader = "^1.9.78.123"
mlflow = "^3.1.1"
shap = "^0.44.0"
lime = "^0.2.0"
xgboost = "^2.0.0"
lightgbm = "^4.1.0"
uvicorn = "^0.34.2"
fastapi = "^0.115.12"
onnx = "^1.15.0"
onnxruntime = "^1.17.0"
tf2onnx = "^1.16.0"
prometheus-client = "^0.19.0"
memory-profiler = "^0.61.0"
line-profiler = "^4.1.0"
dask = "^2024.4.1"
ray = "^2.9.3"
# 監控與告警系統依賴
grafana-api = "^1.0.3"
pyyaml = "^6.0"
websockets = "^15.0.1"
aiofiles = "^23.2.0"
redis = "^5.0.0"
streamlit = "^1.32.0"
streamlit-extras = "^0.3.6"
streamlit-option-menu = "^0.3.6"
xlsxwriter = "^3.1.9"
flask = "^3.0.0"
# 回測系統增強依賴
reportlab = "^4.0.0"
jinja2 = "^3.1.0"
# kaleido = "^0.2.1"  # Temporarily disabled due to compatibility issues
openpyxl = "^3.1.0"
# 安全相關依賴
bcrypt = "^4.0.0"
cryptography = "^41.0.0"
pyjwt = "^2.8.0"
pyotp = "^2.9.0"
qrcode = "^7.4.0"
pillow = "^10.0.0"
python-multipart = "^0.0.20"
email-validator = "^2.2.0"
croniter = "^1.4.0"
jieba = "^0.42.1"


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
# 代碼品質工具
pre-commit = "^4.2.0"
autopep8 = "^2.3.2"
black = "^25.1.0"
flake8 = "^7.2.0"
pylint = "^3.3.7"
mypy = "^1.8.0"
autoflake = "^2.3.1"
radon = "^6.0.1"
# 安全測試依賴
bandit = "^1.7.5"
sqlparse = "^0.4.4"
safety = ">=2.0,<3.0"
# 效能測試依賴
pytest-benchmark = "^4.0.0"
locust = "^2.17.0"
aiohttp = "^3.9.0"
httpx = "^0.26.0"
# 品質報告增強依賴
matplotlib = "^3.8.0"
seaborn = "^0.13.0"
networkx = "^3.2.0"

[tool.poetry.group.test.dependencies]
# 測試框架
pytest = "^8.3.5"
pytest-cov = "^6.1.1"
pytest-asyncio = "^0.23.0"
pytest-mock = "^3.12.0"
# 測試數據和工具
factory-boy = "^3.3.0"
faker = "^20.1.0"

[tool.poetry.group.broker.dependencies]
# 券商 API（可選依賴）
shioaji = "^1.1.0"
ibapi = "^9.81.1"
ccxt = "^4.1.0"
futu-api = "^9.3.5308"

[tool.poetry.group.optional.dependencies]
# 可選功能依賴
structlog = "^23.2.0"
sentry-sdk = "^1.38.0"
click = "^8.1.7"
psycopg2-binary = "^2.9.9"
alembic = "^1.13.0"
# 型別 stub 套件
types-requests = "^2.31.0"
types-pyyaml = "^6.0.12"
types-redis = "^4.6.0"
pyportfolioopt = "1.4.1"

[tool.poetry.scripts]
# 主要應用程式入口 (生產整合版)
start = "src.ui.web_ui_production:main"
web = "src.ui.web_ui_production:main"
web-ui = "src.ui.web_ui_production:main"
web-production = "src.ui.web_ui_production:main"
# 設計原型版本
web-redesigned = "src.ui.web_ui_redesigned:main"
# 傳統備份版本
# API 服務
api-server = "src.api.main:main"
# 工具腳本
quality-check = "scripts.run_quality_checks:main"
security-scan = "scripts.security_checks:main"
# UI 對比測試
ui-comparison = "launch_ui_comparison:main"

# [tool.poetry.extras]
# 可選功能組合 - 暫時註解以修復配置問題
# broker = ["shioaji", "ibapi", "ccxt"]
# monitoring = ["structlog", "sentry-sdk"]
# database = ["psycopg2-binary", "alembic"]
# all = ["shioaji", "ibapi", "ccxt", "structlog", "sentry-sdk", "psycopg2-binary", "alembic"]

# 品質檢查工具配置
[tool.black]
line-length = 88
target-version = ['py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]
known_third_party = [
    "pandas", "numpy", "scipy", "sklearn", "matplotlib", "seaborn", "plotly",
    "streamlit", "fastapi", "pydantic", "uvicorn", "aiohttp", "httpx",
    "sqlalchemy", "redis", "requests", "websockets", "aiofiles",
    "yfinance", "backtrader", "mlflow", "xgboost", "lightgbm",
    "shioaji", "ibapi", "ccxt", "structlog", "sentry_sdk",
    "pytest", "pylint", "black", "mypy", "bandit"
]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pylint.messages_control]
disable = [
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0613",  # unused-argument
    "C0103",  # invalid-name
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.design]
max-args = 5
max-locals = 15
max-returns = 6
max-branches = 12
max-statements = 50
max-parents = 7
max-attributes = 7
min-public-methods = 2
max-public-methods = 20

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "yfinance.*",
    "pandas_ta.*",
    "streamlit.*",
    "plotly.*",
    "sklearn.*",
    "backtrader.*",
    "mlflow.*",
    "shioaji.*",
    "ibapi.*",
    "ccxt.*",
    "structlog.*",
    "sentry_sdk.*",
    "talib.*",
    "dask.*",
    "ray.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]
