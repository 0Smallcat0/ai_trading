apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-trading-app
  namespace: ai-trading
spec:
  replicas: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  template:
    spec:
      containers:
      - name: ai-trading-app
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "4Gi"
            cpu: "2000m"
            ephemeral-storage: "2Gi"
        env:
        - name: API_WORKERS
          value: "8"
        - name: PERFORMANCE_MONITORING
          value: "true"
        - name: CACHE_TTL
          value: "7200"
        livenessProbe:
          httpGet:
            path: /health
            port: 8501
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 15
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /health
            port: 8501
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
      # 節點親和性 - 確保 Pod 分散在不同節點
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ai-trading-system
                - key: component
                  operator: In
                  values:
                  - app
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-type
                operator: In
                values:
                - compute-optimized
      # 容忍度 - 允許在特定節點上運行
      tolerations:
      - key: "high-memory"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: ai-trading
spec:
  replicas: 1
  template:
    spec:
      containers:
      - name: postgres
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
            ephemeral-storage: "500Mi"
          limits:
            memory: "2Gi"
            cpu: "1000m"
            ephemeral-storage: "1Gi"
        env:
        - name: POSTGRES_SHARED_BUFFERS
          value: "256MB"
        - name: POSTGRES_EFFECTIVE_CACHE_SIZE
          value: "1GB"
        - name: POSTGRES_WORK_MEM
          value: "4MB"
        - name: POSTGRES_MAINTENANCE_WORK_MEM
          value: "64MB"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      # 節點親和性 - 偏好在有 SSD 的節點上運行
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: storage-type
                operator: In
                values:
                - ssd
          - weight: 80
            preference:
              matchExpressions:
              - key: node-type
                operator: In
                values:
                - memory-optimized

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: ai-trading
spec:
  replicas: 3
  template:
    spec:
      containers:
      - name: redis
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
            ephemeral-storage: "200Mi"
          limits:
            memory: "1Gi"
            cpu: "500m"
            ephemeral-storage: "500Mi"
        command:
        - redis-server
        - --appendonly
        - "yes"
        - --requirepass
        - $(REDIS_PASSWORD)
        - --maxmemory
        - "768mb"
        - --maxmemory-policy
        - "allkeys-lru"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      # Pod 反親和性 - 確保 Redis 實例分散在不同節點
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ai-trading-system
              - key: component
                operator: In
                values:
                - cache
            topologyKey: kubernetes.io/hostname
