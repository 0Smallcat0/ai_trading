repos:
  # 基本代碼格式化
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: check-json
      - id: check-toml
      - id: mixed-line-ending

  # Python 代碼格式化
  - repo: https://github.com/psf/black
    rev: 24.4.2
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # 導入排序
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  # 移除未使用的導入
  - repo: https://github.com/pycqa/autoflake
    rev: v2.2.1
    hooks:
      - id: autoflake
        args:
          - --in-place
          - --remove-all-unused-imports
          - --remove-unused-variables
          - --remove-duplicate-keys
          - --ignore-init-module-imports

  # 代碼風格檢查
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203, W503]
        additional_dependencies:
          - flake8-docstrings
          - flake8-import-order
          - flake8-bugbear

  # 類型檢查
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --no-strict-optional]
        additional_dependencies:
          - types-requests
          - types-PyYAML
          - types-python-dateutil

  # 代碼質量檢查（簡化版）
  - repo: local
    hooks:
      - id: pylint
        name: pylint
        entry: poetry run pylint
        language: system
        types: [python]
        args:
          - --rcfile=config/pylint.ini
          - --fail-under=8.5

  # 安全檢查
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        name: Bandit 安全檢查
        args: [-r, src/, -f, txt]
        exclude: tests/

  # 檔案大小檢查
  - repo: local
    hooks:
      - id: check-file-size
        name: 檢查檔案大小 (≤300行)
        entry: python
        language: system
        args:
          - -c
          - |
            import os
            import sys

            max_lines = 300
            violations = []

            for root, dirs, files in os.walk('src/'):
                for file in files:
                    if file.endswith('.py'):
                        filepath = os.path.join(root, file)
                        try:
                            with open(filepath, 'r', encoding='utf-8') as f:
                                line_count = len(f.readlines())

                            if line_count > max_lines:
                                violations.append((filepath, line_count))
                        except Exception as e:
                            print(f"警告: 無法讀取檔案 {filepath}: {e}")

            if violations:
                print('❌ 發現超過 300 行的檔案:')
                for filepath, line_count in violations:
                    print(f'  {filepath}: {line_count} 行')
                sys.exit(1)
            else:
                print('✅ 所有檔案都符合 ≤300 行標準')
        files: ^src/.*\.py$
        pass_filenames: false

# 全域配置
default_stages: [commit]
fail_fast: false
minimum_pre_commit_version: "3.0.0"
